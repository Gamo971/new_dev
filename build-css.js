#!/usr/bin/env node

/**
 * Script de build CSS personnalis√© pour le projet
 * Alternative √† TailwindCSS CLI quand Node.js n'est pas disponible
 */

const fs = require('fs');
const path = require('path');

console.log('üé® Build CSS personnalis√© pour le projet...');

// V√©rifier si TailwindCSS CLI est disponible
const { execSync } = require('child_process');

try {
  // Essayer d'utiliser TailwindCSS CLI
  console.log('üì¶ Tentative d\'utilisation de TailwindCSS CLI...');
  
  const inputFile = path.join(__dirname, 'public/css/input.css');
  const outputFile = path.join(__dirname, 'public/css/tailwind-compiled.css');
  
  // Cr√©er le fichier d'entr√©e s'il n'existe pas
  if (!fs.existsSync(inputFile)) {
    fs.writeFileSync(inputFile, `
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Styles personnalis√©s */
.custom-shadow {
  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
}

.kanban-ghost {
  opacity: 0.4;
}

.kanban-drag {
  transform: rotate(5deg);
}
    `);
  }
  
  // Compiler avec TailwindCSS
  execSync(`npx tailwindcss -i ${inputFile} -o ${outputFile} --minify`, { 
    stdio: 'inherit',
    cwd: __dirname 
  });
  
  console.log('‚úÖ TailwindCSS compil√© avec succ√®s !');
  console.log(`üìÅ Fichier g√©n√©r√© : ${outputFile}`);
  
} catch (error) {
  console.log('‚ö†Ô∏è  TailwindCSS CLI non disponible, utilisation du CSS personnalis√©...');
  console.log('üí° Pour compiler TailwindCSS, installez Node.js et ex√©cutez :');
  console.log('   npm install -D tailwindcss');
  console.log('   npx tailwindcss -i public/css/input.css -o public/css/tailwind-compiled.css --minify');
  
  // V√©rifier que notre CSS personnalis√© existe
  const customCssPath = path.join(__dirname, 'public/css/tailwind-custom.css');
  if (fs.existsSync(customCssPath)) {
    console.log('‚úÖ CSS personnalis√© disponible : tailwind-custom.css');
  } else {
    console.log('‚ùå CSS personnalis√© manquant !');
    process.exit(1);
  }
}

console.log('üéâ Build termin√© !');
